{"ast":null,"code":"var _jsxFileName = \"/Users/kyrylo/Desktop/PortfolioWebsite/portfolio_website/src/Clock.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [time, setTime] = useState();\n  useEffect(() => {\n    setInterval(() => {\n      const dateObject = new Date();\n      const hour = dateObject.getHours();\n      const minute = dateObject.getMinutes();\n      let currentTime = hour + ':' + minute;\n      if (hour < 12) {\n        currentTime = hour + ':' + minute + \" AM\";\n      } else {\n        currentTime = hour - 12 + ':' + minute + \" PM\";\n      }\n      currentTime = dateObject.get + \" \" + currentTime;\n      setTime(currentTime);\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Clock\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Clock, \"rkMeZBHX4Eei19CRvWL8taVSCjQ=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Clock","_s","time","setTime","setInterval","dateObject","Date","hour","getHours","minute","getMinutes","currentTime","get","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kyrylo/Desktop/PortfolioWebsite/portfolio_website/src/Clock.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nfunction Clock() {\n    const [time, setTime] = useState();\n\n    useEffect(() => {\n\n        setInterval(() => {\n\n        const dateObject = new Date()\n        const hour = dateObject.getHours()\n        const minute = dateObject.getMinutes()\n        \n        let currentTime = hour + ':' + minute;\n        if(hour<12){\n            currentTime = hour + ':' + minute + \" AM\";\n        }else{\n            currentTime = (hour-12) + ':' + minute + \" PM\";\n        }\n        currentTime = dateObject.get+ \" \" + currentTime;\n        setTime(currentTime)\n        }, 1000)\n\n    }, [])\n    return (\n      <>\n        <div className=\"Clock\">\n            <h5>{time}</h5>\n        </div>\n      </>\n    )\n  }\n  \n  export default Clock"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC3C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IAEZU,WAAW,CAAC,MAAM;MAElB,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;MAC7B,MAAMC,IAAI,GAAGF,UAAU,CAACG,QAAQ,CAAC,CAAC;MAClC,MAAMC,MAAM,GAAGJ,UAAU,CAACK,UAAU,CAAC,CAAC;MAEtC,IAAIC,WAAW,GAAGJ,IAAI,GAAG,GAAG,GAAGE,MAAM;MACrC,IAAGF,IAAI,GAAC,EAAE,EAAC;QACPI,WAAW,GAAGJ,IAAI,GAAG,GAAG,GAAGE,MAAM,GAAG,KAAK;MAC7C,CAAC,MAAI;QACDE,WAAW,GAAIJ,IAAI,GAAC,EAAE,GAAI,GAAG,GAAGE,MAAM,GAAG,KAAK;MAClD;MACAE,WAAW,GAAGN,UAAU,CAACO,GAAG,GAAE,GAAG,GAAGD,WAAW;MAC/CR,OAAO,CAACQ,WAAW,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EAEZ,CAAC,EAAE,EAAE,CAAC;EACN,oBACEd,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAD,QAAA,eAClBhB,OAAA;QAAAgB,QAAA,EAAKX;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACN,CAAC;AAEP;AAACjB,EAAA,CA7BMD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA+BZ,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}